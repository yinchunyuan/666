Git是什么：一款分布式的代码版本控制工具 (免费且开源的分布式版本控制系统)
Git学习路线
{
(1) 学习视频推荐: 尚硅谷
(2) 书籍: 《Pro Git》
(3) 文章:  Git tutorial
(4) 博客:  如何写好 Commit Message
(5) 动手实现一个Git: https://wyag.thb.lt/
(6) 其他动手东西: [build-your-own-x](https://github.com/danistefanovic/build-your-own-x) 
                 [project-based-learning](https://github.com/tuvtran/project-based-learning)
} 
这些资料均来自csdiy.wiki
个人感觉Git的学习主要在于知道相关的命令，然后就是大量的使用了.
CS61B 实验4 有关于Git的详细使用





常用命令: 
         · git init 初始化git仓库
         · git clone HTTPS或SSH链接  把远程仓库克隆到本地, SSH链接需要在Github账户中添加本地的SSH密钥
         · git pull origin  获取远程库最新更改的命令
         · git add 文件夹或文件名称   把文件添加到暂存区         git add . 把当前目录下的所有文件添加到暂存区
         · git status 检查分支状态(看进行了哪些增加、删除等操作)
         · git commit -m "***"  提交更改       *** 里应简洁明确地表示出所做的更改 
         · git push origin main 推送本地库到远程库    注意: 如果是第一次推送, 应该在 push 后加 -u ,后续就可以不用写 -u 了
         · git push -f origin main  强制推送本地库到远程库
         · git log 显示提交的历史记录
         · git restore 把文件恢复到最近提交的版本     恢复特定的提交 git restore --source=[commitID] [path_to_file]
         · git rm 文件名    删除文件




一般, Git 的数据模型或表示形式是基于链表的
-  自己写一个Git








现在依旧是菜鸟。。。
切忌好高骛远(个人惨痛教训)


